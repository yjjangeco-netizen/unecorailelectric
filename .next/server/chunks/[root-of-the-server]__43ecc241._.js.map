{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 114, "column": 0}, "map": {"version":3,"sources":["file:///C:/CSHOP/unecorailelectric/src/lib/supabase.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js'\n\n// 환경 변수에서 Supabase 설정 가져오기\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL || 'https://example.supabase.co'\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY || 'example-key'\n\n// 개발 환경에서는 기본값 사용, 프로덕션에서는 환경변수 필수\nif (process.env.NODE_ENV === 'production' && (!process.env.NEXT_PUBLIC_SUPABASE_URL || !process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY)) {\n  throw new Error('Missing Supabase environment variables. Please check your .env.local file.')\n}\n\n// 브라우저용 클라이언트 (SSR 지원)\nexport const createBrowserSupabaseClient = () => {\n  return createClient(supabaseUrl, supabaseAnonKey, {\n    auth: {\n      autoRefreshToken: true,\n      persistSession: true,\n      detectSessionInUrl: true\n    }\n  })\n}\n\n// 서버용 클라이언트 (SSR 지원)\nexport const createServerSupabaseClient = () => {\n  return createClient(supabaseUrl, supabaseAnonKey, {\n    auth: {\n      autoRefreshToken: false,\n      persistSession: false\n    }\n  })\n}\n\n// 기존 클라이언트 (하위 호환성)\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey, {\n  auth: {\n    autoRefreshToken: true,\n    persistSession: true,\n    detectSessionInUrl: true\n  }\n})\n\n// 품목 타입 정의\nexport interface Item {\n  id: string\n  name: string           // 품명\n  specification: string   // 규격\n  maker: string          // 메이커\n  unit_price: number     // 금액\n  purpose: string        // 용도\n  min_stock: number      // 최소재고\n  category?: string\n  description?: string\n  created_at: string\n  updated_at: string\n}\n\n// 입고 타입 정의\nexport interface StockIn {\n  id: string\n  item_id: string\n  quantity: number\n  unit_price: number\n  condition_type: 'new' | 'used_good' | 'used_defective' | 'unknown'\n  reason?: string\n  ordered_by?: string\n  received_by: string\n  received_at: string\n}\n\n// 출고 타입 정의\nexport interface StockOut {\n  id: string\n  item_id: string\n  quantity: number\n  project?: string\n  issued_by: string\n  is_rental: boolean\n  return_date?: string\n  issued_at: string\n}\n\n// 현재 재고 타입 정의\nexport interface CurrentStock {\n  id: string\n  name: string\n  specification: string\n  unit_price: number\n  current_quantity: number\n  total_amount: number\n  notes?: string\n  category?: string\n  stock_status: 'normal' | 'low_stock'\n}\n\nexport interface User {\n  id: string\n  username: string\n  password: string\n  name: string\n  department: string\n  position: string\n  phone: string\n  is_admin: boolean\n  created_at: string\n  updated_at: string\n}\n\nexport interface UserGroup {\n  id: string\n  name: string\n  description: string\n  created_at: string\n}\n\nexport interface UserGroupMember {\n  id: string\n  user_id: string\n  group_id: string\n  created_at: string\n}\n\nexport interface Disposal {\n  id: string\n  stock_in_id: string\n  item_id: string\n  quantity: number\n  disposed_by: string\n  disposed_at: string\n  reason: string\n  notes: string\n  created_at: string\n} "],"names":[],"mappings":";;;;;AAAA;;AAEA,2BAA2B;AAC3B,MAAM,cAAc,QAAQ,GAAG,CAAC,wBAAwB,IAAI;AAC5D,MAAM,kBAAkB,QAAQ,GAAG,CAAC,6BAA6B,IAAI;AAErE,mCAAmC;AACnC;;AAKO,MAAM,8BAA8B;IACzC,OAAO,CAAA,GAAA,yLAAA,CAAA,eAAY,AAAD,EAAE,aAAa,iBAAiB;QAChD,MAAM;YACJ,kBAAkB;YAClB,gBAAgB;YAChB,oBAAoB;QACtB;IACF;AACF;AAGO,MAAM,6BAA6B;IACxC,OAAO,CAAA,GAAA,yLAAA,CAAA,eAAY,AAAD,EAAE,aAAa,iBAAiB;QAChD,MAAM;YACJ,kBAAkB;YAClB,gBAAgB;QAClB;IACF;AACF;AAGO,MAAM,WAAW,CAAA,GAAA,yLAAA,CAAA,eAAY,AAAD,EAAE,aAAa,iBAAiB;IACjE,MAAM;QACJ,kBAAkB;QAClB,gBAAgB;QAChB,oBAAoB;IACtB;AACF","debugId":null}},
    {"offset": {"line": 155, "column": 0}, "map": {"version":3,"sources":["file:///C:/CSHOP/unecorailelectric/src/app/api/test/search/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server'\r\nimport { createServerSupabaseClient } from '@/lib/supabase'\r\n\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    const supabase = createServerSupabaseClient()\r\n    const body = await request.json()\r\n    \r\n    const { query, category, minPrice, maxPrice, inStock } = body\r\n\r\n    // 입력값 검증\r\n    if (!query || query.length < 1) {\r\n      return NextResponse.json({\r\n        ok: false,\r\n        error: '검색어가 비어있습니다'\r\n      }, { status: 400 })\r\n    }\r\n\r\n    if (query.length > 200) {\r\n      return NextResponse.json({\r\n        ok: false,\r\n        error: '검색어가 너무 깁니다 (200자 이하)'\r\n      }, { status: 400 })\r\n    }\r\n\r\n    // 검색 쿼리 구성\r\n    let searchQuery = supabase\r\n      .from('current_stock')\r\n      .select('*')\r\n\r\n    // 품명, 규격, 분류에서 검색\r\n    searchQuery = searchQuery.or(`name.ilike.%${query}%,specification.ilike.%${query}%,category.ilike.%${query}%`)\r\n\r\n    // 카테고리 필터\r\n    if (category && category !== '전체') {\r\n      searchQuery = searchQuery.eq('category', category)\r\n    }\r\n\r\n    // 가격 범위 필터\r\n    if (minPrice !== undefined && minPrice > 0) {\r\n      searchQuery = searchQuery.gte('unit_price', minPrice)\r\n    }\r\n\r\n    if (maxPrice !== undefined && maxPrice > 0) {\r\n      searchQuery = searchQuery.lte('unit_price', maxPrice)\r\n    }\r\n\r\n    // 재고 상태 필터\r\n    if (inStock !== undefined) {\r\n      if (inStock) {\r\n        searchQuery = searchQuery.gt('current_quantity', 0)\r\n      } else {\r\n        searchQuery = searchQuery.eq('current_quantity', 0)\r\n      }\r\n    }\r\n\r\n    // 검색 실행\r\n    const { data: searchResults, error: searchError } = await searchQuery\r\n      .order('name')\r\n      .limit(100)\r\n\r\n    if (searchError) {\r\n      throw new Error(`검색 실행 실패: ${searchError.message}`)\r\n    }\r\n\r\n    // 검색 통계 계산\r\n    const totalQuantity = searchResults?.reduce((sum, item) => sum + (item.current_quantity || 0), 0) || 0\r\n    const totalValue = searchResults?.reduce((sum, item) => sum + (item.total_amount || 0), 0) || 0\r\n    const averagePrice = searchResults && searchResults.length > 0 ? totalValue / totalQuantity : 0\r\n\r\n    // 카테고리별 분포\r\n    const categoryDistribution = searchResults?.reduce((acc, item) => {\r\n      const cat = item.category || '미분류'\r\n      acc[cat] = (acc[cat] || 0) + 1\r\n      return acc\r\n    }, {} as Record<string, number>) || {}\r\n\r\n    return NextResponse.json({\r\n      ok: true,\r\n      message: '검색 완료',\r\n      data: {\r\n        query,\r\n        category,\r\n        minPrice,\r\n        maxPrice,\r\n        inStock,\r\n        resultCount: searchResults?.length || 0,\r\n        totalQuantity,\r\n        totalValue,\r\n        averagePrice: Math.round(averagePrice),\r\n        categoryDistribution,\r\n        results: searchResults || [],\r\n        timestamp: new Date().toISOString()\r\n      }\r\n    })\r\n\r\n  } catch (error) {\r\n    console.error('검색 테스트 오류:', error)\r\n    return NextResponse.json({\r\n      ok: false,\r\n      error: '검색 처리 중 오류가 발생했습니다.',\r\n      details: error instanceof Error ? error.message : '알 수 없는 오류'\r\n    }, { status: 500 })\r\n  }\r\n}\r\n\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    const supabase = createServerSupabaseClient()\r\n    const { searchParams } = new URL(request.url)\r\n    \r\n    const query = searchParams.get('q') || ''\r\n    const category = searchParams.get('category') || ''\r\n    const minPrice = searchParams.get('minPrice') ? parseInt(searchParams.get('minPrice')!) : undefined\r\n    const maxPrice = searchParams.get('maxPrice') ? parseInt(searchParams.get('maxPrice')!) : undefined\r\n    const inStock = searchParams.get('inStock') === 'true'\r\n\r\n    if (!query) {\r\n      return NextResponse.json({\r\n        ok: false,\r\n        error: '검색어가 필요합니다'\r\n      }, { status: 400 })\r\n    }\r\n\r\n    // 검색 쿼리 구성\r\n    let searchQuery = supabase\r\n      .from('current_stock')\r\n      .select('*')\r\n\r\n    // 품명, 규격, 분류에서 검색\r\n    searchQuery = searchQuery.or(`name.ilike.%${query}%,specification.ilike.%${query}%,category.ilike.%${query}%`)\r\n\r\n    // 카테고리 필터\r\n    if (category && category !== '전체') {\r\n      searchQuery = searchQuery.eq('category', category)\r\n    }\r\n\r\n    // 가격 범위 필터\r\n    if (minPrice !== undefined && minPrice > 0) {\r\n      searchQuery = searchQuery.gte('unit_price', minPrice)\r\n    }\r\n\r\n    if (maxPrice !== undefined && maxPrice > 0) {\r\n      searchQuery = searchQuery.lte('unit_price', maxPrice)\r\n    }\r\n\r\n    // 재고 상태 필터\r\n    if (inStock !== undefined) {\r\n      if (inStock) {\r\n        searchQuery = searchQuery.gt('current_quantity', 0)\r\n      } else {\r\n        searchQuery = searchQuery.eq('current_quantity', 0)\r\n      }\r\n    }\r\n\r\n    // 검색 실행\r\n    const { data: searchResults, error: searchError } = await searchQuery\r\n      .order('name')\r\n      .limit(50)\r\n\r\n    if (searchError) {\r\n      throw new Error(`검색 실행 실패: ${searchError.message}`)\r\n    }\r\n\r\n    return NextResponse.json({\r\n      ok: true,\r\n      message: '검색 완료',\r\n      data: {\r\n        query,\r\n        resultCount: searchResults?.length || 0,\r\n        results: searchResults || [],\r\n        timestamp: new Date().toISOString()\r\n      }\r\n    })\r\n\r\n  } catch (error) {\r\n    console.error('검색 테스트 오류:', error)\r\n    return NextResponse.json({\r\n      ok: false,\r\n      error: '검색 처리 중 오류가 발생했습니다.',\r\n      details: error instanceof Error ? error.message : '알 수 없는 오류'\r\n    }, { status: 500 })\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}